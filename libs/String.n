#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <string.h>

class String {

    - char *value = NULL;
    - int length = 0;

    + String *init(char *text) {
        this->value = (char *)malloc((sizeof(text) + 1) * sizeof(char));
        memset(this->value, 0, sizeof(this->value));
        this->length = sizeof(text);
        this->value(text);
        return this;
    }

    - void realloc(int size) {
        this->value = realloc(this->value, size);
        this->length = size;
    }

    - void value(char *text) {
        if(strlen(text) >= this->length - 1) {
            this->realloc(strlen(text) + 1);
        }
        int len = this->length;
        for(int i=0; i<len; ++i) {
            this->value[i] = text[i];
        }
        this->value[len] = 0;
    }

    - void println() {
        int len = this->length;
        for(int i=0; i<len; ++i) {
            printf("%c", this->value[i]);
        }
        printf("\n");
    }

    - int indexOf(char *text) {
        char *p = strstr(this->value, text);
        return p < 0 ? -1 : (int)(p - this->value);
    }

    - int lastIndexOf(char *text) {
        char *tmp = (void *)this->value, *p = 0;
        while((tmp = strstr(tmp, text)) != NULL) {
            p = tmp;
            ++tmp;
        }
        return p < 0 ? -1 : (int)(p - this->value);
    }

    - char *slice(int start, int end) {
        int len = end - start;
        char *r = (char *)malloc((len + 1) * sizeof(char));
        memset(r, 0, sizeof(r));
        for(int i = 0; i < len; ++i) {
            r[i] = this->value[start + i];
        }
        return r;
    }

    - void replace(char *target, char *text) {
        int p = this->indexOf(target);
        if(p < 0) {
            return;
        }
        if(strlen(target) < strlen(text)) {
            this->realloc(strlen(text) - strlen(target) + this->length);
        }
        int len = strlen(text);
        for(int i=0; i<len; ++i) {
            this->value[p + i] = text[i];
        }
        this->value[this->length - 1] = 0;
    }

    - void toLowerCase() {
        for(int i=0; i<this->length; ++i) {
            int val = this->value[i];
            if(val > 64 && val < 91) {
                this->value[i] = val + 32;
            }
        }
    }

    - void toUpperCase() {
        for(int i=0; i<this->length; ++i) {
            int val = this->value[i];
            if(val > 96 && val < 123) {
                this->value[i] = val - 32;
            }
        }
    }

}

int main(void) {

    String *helloWorld = String->init("Hello World"); // Class Method Constructor Call
    helloWorld->println();
    helloWorld->value("This is me!");
    helloWorld->println();
    printf("%i\n", helloWorld->indexOf("is"));
    printf("%i\n", helloWorld->lastIndexOf("is"));
    printf("%s\n", helloWorld->slice(2, 6));
    helloWorld->replace("me", "bladerunner");
    helloWorld->println();
    helloWorld->toUpperCase();
    helloWorld->println();
    helloWorld->toLowerCase();
    helloWorld->println();

    return 0;
}